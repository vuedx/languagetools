# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY) from ../workflows-source/ci.yaml
name: CI/CD
'on':
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node packages
        uses: actions/cache@v2
        env:
          cache-name: pnpm-modules
        with:
          key: >-
            ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/.pnpm
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Setup PNPM
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.2.5
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
      - run: |
          cd samples
          pnpm install --frozen-lockfile --silent
      - name: Build
        run: |
          pnpm recursive --filter @vuedx/monorepo-tools run build
          pnpm run ci:build
          pnpm recursive --filter ./extensions run build
      - name: Upload build artefact
        uses: actions/upload-artifact@v2
        with:
          name: build-artefact
          retention-days: 30
          path: |
            ./packages/*/lib
            ./packages/*/runtime
            ./extensions/coc-vue/dist
            ./extensions/*/dist
            ./extensions/*/*.vsix
  unit:
    needs: build
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        node_version:
          - '16'
        include:
          - os: ubuntu-latest
            node: '16'
            command: coverage
    runs-on: ${{ matrix.os }}
    name: Node ${{ matrix.node_version }} on ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node packages
        uses: actions/cache@v2
        env:
          cache-name: pnpm-modules
        with:
          key: >-
            ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/.pnpm
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.2.5
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
      - name: Download build artefact
        uses: actions/download-artifact@v2
        with:
          name: build-artefact
          path: .
      - run: |
          cd samples
          pnpm install --frozen-lockfile --silent
      - name: Test
        run: pnpm ${{ matrix.command || 'test' }}
      - name: Collect coverage
        if: always() && matrix.command == 'coverage'
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage/coverage-final.json
  eslint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node packages
        uses: actions/cache@v2
        env:
          cache-name: pnpm-modules
        with:
          key: >-
            ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/.pnpm
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Setup PNPM
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.2.5
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
      - run: pnpm eslint:check
  insiders:
    name: Insiders Release
    runs-on: ubuntu-latest
    environment:
      name: Insiders
      url: >-
        https://marketplace.visualstudio.com/items?itemName=znck.preview-insiders
    needs: unit
    concurrency:
      group: insiders
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node packages
        uses: actions/cache@v2
        env:
          cache-name: pnpm-modules
        with:
          key: >-
            ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/.pnpm
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Setup PNPM
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.2.5
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
      - name: Download build artefact
        uses: actions/download-artifact@v2
        with:
          name: build-artefact
          path: .
      - name: Publish Insiders Extension
        run: |
          pnpm recursive --filter ./extensions run release
        env:
          RELEASE_CHANNEL: insiders
          VSCODE_MARKETPLACE_TOKEN: ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}
      - name: Publish Insiders Packages
        run: >
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc

          pnpm recursive --filter ./packages --filter ./extensions/coc-vue exec
          -- npm version prerelease --preid=insiders-$(date +%s)

          pnpm recursive publish --tag insiders --access public --no-git-checks
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: insiders
          prerelease: true
          files: |
            extensions/*/*.vsix
  check_release:
    name: Check Release
    runs-on: ubuntu-latest
    needs: unit
    if: startsWith(github.event.head_commit.message, 'release:')
    steps:
      - run: echo 'ok'
  release:
    name: Release
    runs-on: ubuntu-latest
    environment:
      name: Production
    needs: check_release
    concurrency:
      group: release
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node packages
        uses: actions/cache@v2
        env:
          cache-name: pnpm-modules
        with:
          key: >-
            ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/.pnpm
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Setup PNPM
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.2.5
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
      - name: Download build artefact
        uses: actions/download-artifact@v2
        with:
          name: build-artefact
          path: .
      - name: Publish Insiders Extension
        run: |
          pnpm recursive --filter ./extensions run release
        env:
          VSCODE_MARKETPLACE_TOKEN: ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}
        continue-on-error: true
      - name: Publish Insiders Packages
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
          pnpm recursive publish --tag latest --access public --no-git-checks
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
          prerelease: false
          files: |
            extensions/*/*.vsix
