name: Release

on:
  pull_request:
    types:
      - closed
  workflow_dispatch:
    inputs:
      action:
        description: Action (pr/release)
        default: pr
        required: true
  push:
    branches:
      - main
jobs:
  debug:
    name: Debug
    runs-on: ubuntu-20.04
    steps:
      - name: Print context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}

  create:
    name: Create release PR
    runs-on: ubuntu-20.04
    if: (
      github.event_name == 'push'
      ) || (
      github.event.inputs.action == 'pr'
      )
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'

      - name: Setup PNPM
        uses: pnpm/action-setup@v1.2.1
        with:
          version: 5.5.4
          run_install: |
            - args: [--frozen-lockfile, --silent]

      - name: Create Release Pull Request
        uses: changesets/action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  publish:
    name: Publish release
    runs-on: ubuntu-20.04
    if: |
      (
        github.event_name == 'pull_request' &&
        github.event.action == 'closed' &&
        github.event.pull_request.merged == true &&
        github.event.pull_request.head.ref == 'changeset-release/main'
      ) || (
        github.event.inputs.action == 'release'
      )
    steps:
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: timestamp
        with:
          format: YYYY.MM.DD-HH.mm.ss
      - name: 'Create Release'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v${{ steps.timestamp.outputs.formattedTime }}
          release_name: Release v${{ steps.timestamp.outputs.formattedTime }}
          body: ${{ github.event.pull_request.body }}
